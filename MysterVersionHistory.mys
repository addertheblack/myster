//!Internal! version history from Dev6 onward
//ï¿½ Andrew Trumper 2001-2005

//NOTE TO READERS:
//THIS DOCUMENT IS MENT FOR INTERNAL USE ONLY
//ie: don't smear it on your skin.. 

Work on DEV 6:

	2001/04/14
	-> Fixed singleton synchronization issue with MysterIPPool object.
	-> Reduced the timeout of the ClientHandshake object to 90 seconds from 120

	2001/04/15
	-> Fixed a bounds.top bug in the PreferencesDialogBox Window. The bug caused the dialog box text
			to be squished.
	
	2001/04/17
	-> Made assertFileList routine synchronized.
	-> Added a check to handshake thread to deal with the possibility that the numberoffiles MML is null.
			This stops a nasty cascade error..
	
	2001/04/21 
	-> Added the "array of last resort" to the SearchButtonEvent object. This array stores
			severs addresses to try if the client currently does not know any active servers.
			Yeah, it's hard coded, deal with it.
			
			IPs in the last resort array:
String[] lastresort={"bigmacs.homeip.net","mysternetworks.homeip.net", "mysternetworks.dyndns.org", "myblueg3.homeip.net", "emaline.homeip.net"}; 

	-> Fixed Server stats window tilt bar + size problem with getInsets()
	
	-> added ability to resume file transfers on the server side and in the protocol. 
	  		Client side still to do!!!
	  		NOTE TO SELF: Update Myster protocol docs!
	  		

<Andrew enters the twilight Zone of exams>!

Work on DEV7:

	2001/05/05
	-> Fixed an EOFException problem inside the handshake object.
	-> Added the path to the FileListManagerWindow on suggestion from a user.
	-> Started work on a seperate multicolumn list object.
	
	2001/05/06
	-> working on Multi column list.
	
	2001/05/07
	-> working on Multi column list.
	
	2001/05/08
	-> still working on Multi column list.
	
	2001/05/09
	-> BWAAARRRGGHHHH!!! on MCL...
	
	2001/05/12
	-> designing an architecture that would allow me to combine the MP3 header lister program with the 
			MCList object to have Myster list file stats. Considering an unbatched system.
			
	2001/05/13
	-> Probably will use a batched system.
	
	2001/05/15
	-> Myster now returns a 0 byte if it does not understand a protocol.
	-> Ping connection section has been done properly. (ie: simply returns a 1 as a byte)
			Breaks compatibility with old version! (oh for shame!)
	-> Updated Myster Protocol docs to include new resume tranfer long.
	
	2001/05/16
	-> Fixed FileManager Caching bug.
	-> Fixed stupid problem with saving file type locations. I dread to think how long that has been going on.
	-> Added MCList to the program. Not all functionality is present yet.
	
	2001/05/17
	-> Multicolumn list support is complete but slow and slightly buggy.
	
	2001/05/18
	-> Started tinkering with the list to improve performance an integration.
	
	2001/05/20
	-> Made the list load item information in the background as a seperate thread. Looks sweet.
	
	2001/05/23
	-> Fixed a few retarted problems with the threads continuing after the search has been canceled.
			NOTE: This routine apears to occasionaly causes VM freezes on Macs.. Looking into it. Probably a stupid mac trick.
	-> Fixed a bug with a removeCrap() routine in the IPList class. This routine is supposed to traverse the Myster data
			structures looking for errors and the fix them. It was going through the data structures and
			crashing the program instead.
	-> Fixed another bug I introduced early in the Dev 8 cycle to do with file path information not updating
			properly. Ugh. I am realy starting to regret the design dessisions I made with regard to the prefs.
	-> Detected a bug in the way Myster handles lists, but have been unable to reproduce it or
			fix it. The problem is that Myster stops accepting new IPs in its list. This is apart from the bugs
			that happen if the user tinkers with the Myster prefs file.
	-> Overal this cycle has been very frustrating since for every bug I seem to fix, I introduce another.
			This is a testiment to the difficulty of implementing the Myster properly not to mention
			the difficulties involved in TESTING!!!! 
	-> Played around with the System.out.println()s.. Removed a whole bunch that didn't tell me anything usefull.
	-> Myster has grown to 8000 lines!
	-> Fixed a scary "memory leak" message.
	-> Experiencing ISP problems. It appears I am unable to send at my full 15k/s. Managing only 500bytes/s!
	
	2001/05/24
	-> Fixed some serious lingering bugs.
	-> Changed the backend so the MysterIPPool object actually works properly. 
	-> Bad news.. I found the MysterIPPool object was so screwed up my little homne spun garbage collector was doing
			two things. jack and shit, so I removed it. Now the list will continue to grow forever.
			
	2001/05/25
	-> Added a few more ips to the array of last resort.
	-> Added a limiter to the MysterIPPool. (only up until 1200 ips). Makes mouth happy. probably doesn't work.
	
Work on DEV 8:
	
	2001/06/04
	-> Looking at code trying to figure out how to build Napster support into Myster.	
	
	2001/06/05
	-> implemented Napster code.
	
	2001/06/06
	-> Tried to figure out what was not working.
	
	2001/06/07
	-> Fixed code to be thread safe.
	
	2001/06/09
	-> Implemented a tracker viewer.
	
	2001/06/10
	-> fixed a few embarassing bugs in the MysterIP object to do with updating them.
	
	2001/06/11
	-> Fixed a small problem with the MPG3 header object: It now recognizes more badly formated files.
	-> Adjusted the "MINIUPDATETIME" so MysterIP's status is not updated quite as often.
	-> Myster is now 11 000 line of code. <Andrew does a little dance>
	
	<Large void in space time while working on Concordia's University's java Applets>
	
	2001/07/07
	-> Fixed up a few last things in the tracker window.
	-> tweaking..
	-> yet more tweaking...
	-> Set only the search window to apear by default.
	-> Considering having windows save their location and size so they'll apear in the same place next reload.
	
	[Large void in space time]
	- major code re-org. Put stuff into packages like it should be.
	- working on a chat program.
	- Fixed bug encountered when 100+1 ips are in the iplist.
	- Found crashing - the - VM bug. Can't fix it, don't know the exact cause.. I suspect Myster is 
	 		causing a thread bomb.
	[End large void]
	
	2001/07/22
	-> working on a chat program for Myster (Still)
	-> finaly fixed the bug the the preferences window where the explaination gets squashed on the Windows platform.
	
	2001/07/22 - 2001/08/03
	-> Working on Myster Chat. So far Myster chat is at about 2000 lines and counting. It's 
		funny that Myster DEV 1 was about this size when I first started testing it. Myster DEV 9
		is around 12 000 lines if you're wondering.
		
	2001/08/04 - 2001/07/05 (12 hour days)
	-> Added the Semaphore class from the Myster Chat sub-project to Myster.
	-> Made check status in MysterIP.java a static function.
	-> Guarded this function with a semaphore at 15. So now no more than 
		15 threads can ping computers at any one time. This is good because
		without this cap, Myster occasionally has hundreds of threads pinging 
		at the same time. If you happened to be playing unreal when this happened,
		you would most likely end up dead (as I have).
	-> improved memory management by making sure servers only had at most one
		"ping" thread active at one time. Before this point MysterIP objects  
		would often have dozens of outstanding threads. If you do the math ->
		200 MysterIP object * 12 = 2400 threads. It's no wonder that DEV9 was
		crashing the VM!
	-> Fixed the ranking function so that it no longer gives -inf rankings to
		nodes that haven't set their preferences properly.
	-> Set the re-ping time at 5 minutes (in DEV 8 it's infinity, in Dev 9.0 
		it's 30 seconds, so this is an improvement!).
	-> Working 2 days at 12 hours.. I wonder what the outside looks like? :-)
	
	2001/08/06
	-> Added a semaphore to refreshAll() inside MysterIP(). Since synchronized
		works on the whole object, and refreshAll() needed to be synchronized, 
		this ment that any other synchronized functions would be blocked if the
		slow refreshAll() function was excecuting. refreshAll() is now
		mutually exclusive using semaphores. (secondsem)
		
	2001/08/14
	-> Started work on a setup "helper" to make setting up Myster less painfull..
	
	2001/08/17
	-> Continued work on Myster setup program.
	
	2001/08/18 - 2001/08/23
	-> Worked on trying to figure out CVS
	-> Worked on getting the Startup Wizard finished.
	-> Currently hoping for a sept 1 launch of The Next public Myster client.
	
	2001/08/23
	-> Finishing up Setup assistant
	-> Working on memory management
	-> set IPlist max length to 50 instead of 100. (!)
	-> made the headers in the MCList look more like buttons.
	-> Speeding up opperation in the MysterIPPool object.
	-> I remvoed quite a bit of synchronization from the IPPool object so I wouldn't be too
		suprised if bugs cropped up later. I know for a fact that there are a few.. but they are 
		really unlikely and the concequencience aren't too bad.
	-> Fixed a few issues with the MultiColumn list. Added a 3-d effect to the header and
		fixed up the Default MCList theme with a better background color. It looks nicer now.
		
	2001/08/24-25
	-> worked on CVS again.
	
	2001/08/26
	-> minor fixes
	-> Completely hooked up the setup wizard. It now works! yeah!
	-> Note: Chat server is still not implemented, so don't try to chat to yourself; it won't work.
	
	2001/08/27
	-> minor fixes
	
	2001/08/28
	-> Changed the MultiColumn List Double click time to 500ms from 250ms. Should stop the bitching that
		the MultiColumnList's double click doesn't work sometimes.
		
	2001/08/29
	-> Fixed a massive error inside the Tracker's automatic crawler. The bug made the tracker totaly
		useless in all previous versions. I'm terrified to think how long this has been not working
		NOTE TO ALL : ALL PREVIOUS VERSIONS HAVE A TOTALY BROKEN TRACKERS!
		NOTE TO SELF: Encapsulate the fucking protocol, dumbass!
		(wow, that was old code. The protocol it implemented was DEV 7's version!)
	-> Removed a few stupid debugging messages.
	-> Added a few more stupid debugging messages.
	-> Fixed a socket not being closed.
	
	2001/09/1
	-> Fixed a problem to do with "Other Downloads" folder. The setup wizard wasen't writting a correct path 
		to the FileManager
	-> Fixed a few typos.
	-> Got rid of the "Chat Server Setup" panels since there isn't a chat server yet.
	
 Work on DEV 9.5:
	
	2001/09/05
	-> Playing with myster to try and speed things up a bit.
	
	2001/09/09
	-> made the MCList allow for listing by greatest to smallest as well as the oposite.
	-> made the return key start a new search in the search window.
	
	2001/09/10
	-> changed some of the names to be more mac friendly.
	
	2001/09/11
	-> Planes run into world trade center.
	
	2001/09/13
	-> nothing.
	
	2001/09/14
	-> Added auto scroll to the MCList
	
	2001/09/15
	-> Redid the file manager's default paths.
	-> Made the disable sharing checkmark actually stop the file sharing.
	
	2001/09/16
	-> Worked on updating the wizard and file manager to work with a new folder system.
	-> updated the wizard back end hooks to work with the new filemanager interface.
	
	2001/09/17
	-> worked on a new interface (GUI) for the new filemanager and folder system.
	
	2001/09/18
	-> job hunting
	
	2001/09/19
	-> finished up the new file manager interface
	-> job hunting.
	
	2001/09/20
	-> nothing.
	
	2001/09/21
	-> Made a few of the source files follow DOS formating conventions.. it means CVS is less confused...
	
	<void in space time>
	
	2001/09/29
	-> ? forget
	
	2001/09/30
	-> ? forget
	
	2001/10/01
	-> Got the MCList setColumnWidth() function working. Updated a bunch of things to make use of that new method
	-> Fixed a bug that was confusing MaxOS X.
	
	<...>
	
	-> worked on a "channels" implementation.
	-> new server stats
	-> new tabbing system
	-> Implemented client side file transfer resume. (sort of)
	-> Tweaks in misc bits.
	-> made the return key initiate a connection in the peer-to-peer window
	
	2001/10/23
	-> made it so Myster will never forget its preferences again.
	-> improved performance in the mac version tremendously.
	
	2001/10/24
	-> fixed a small bug in the preferences to do with auto saving. (MML.copy());
	
	2001/10/25
	-> Seperated the search engine from the rest of the program so it can be made pluggin complient.
	-> Improved the Search GUI behavior.
			- Search / Stop
			- "Stopping threads" message and animations.
			- other things to make that work properly.
			
	<worked / argued about event manager>
		The event manager is a particularly annoying piece of software to write since during its implementation
		one realises that it is a slew of specific classes with the only difference between them being that
		the interfaces are different. Since this seemed a rather tedious thing to do, if you consider that computers
		are usualy quite good at tedious things, I wanted to make sure that the way I was doing the event manager was 
		correct. I sent out several e-mails to other decent programmers and began to to look through data patterns
		books for a solution. When the results came back in I was very depressed. None of the books I was reading
		had any thing new (although I did find out that a few of the things I was doing in Myster had names, which
		is good and I read up on the Java beans event system.). The e-mails to other programmers turned up
		imaginative solutions, but nothing new.
		
		The tradeoffs were grim. Either I could have a system that I wanted and I had to type out a slew of special cases,
		or I could devise a standard system and loose the Java type checking... and if you're going to create a 
		strongly typed language you migth as well make use of it.
		
		The final system in Myster is the tedious system. Basically, I wrote my own set of dispatchers. Each connection
		section (ie: protocol segment) has its OWN independent dispatcher. The idea is that each connection section 
		both now and in the future, would want to send out different events and possibly sent them out in different 
		ways. Also, each connection section currently running is at a different point in excecution. SO what we
		want is to have a seperate event disptacher-event-listener combo for each connection section.
		
		In order to avoid having many connections between the back end-server side connection sections and 
		objects wishing to listener for events, the system must somehow furnish only te dispatcher
		required when it's required. The only way I can think of to do this is have a special "connection event"
		that contains within it the dispatcher for the perticular connection section that has just been
		created. And so this is exactly what happends. A "ConnectionManagerEvent" contains a "getDispatcher()" method
		that will return the right dispacther for that method. Dispatcher can be told apart by either 
		doing type checking or looking up the ConnectionSectionInt, which is the connection number that 
		connecton section is registered under.
		
	</>

	2001/11/03
	-> Compiled the new event manager into Myster.
	-> Added these files to CVS
	-> Compiled the SSGui files into Myster
	-> Added these files to CVS
	-> Debugged CVS
		-- insert rant about the Unix mentality, CVS, bad UIs here..
	-> Debugged the SSGui
	-> tested to see if the new Event Manager worked. It did.
	-> Preferences.save() is throwing a utfdataformatexception somehow!
		???
		
	2001/11/04
	-> Found a bug. out.writeUTF(String s); does not support UTFs string size is bigger 65k. I found no other
		way around this. I set the String to do a getBytes() and write that to disk in one shot. 
		This will probably fail at some point as well; I'm not sure how the encoding works, you see.
		Compatibility with older version is maintained byt having a UTF string at the start. (See code)
	-> Hooked up more of the event system. Geeze, this takes forever.
	-> Trying to fix CVS version of Myster. It's broke!
	
	2001/11/05
	-> Well, today has been a good example of why you should never make design desicions while watching the
		Simpsons.
	-> Watched Simpsons
	-> Created an architecture that would allow the SSGui to access Server Events.
	-> Hooked up # of searches and last X searches...
	-> Told Myster to destroy all references to bluedevil.homeip.net.
	
	2001/11/06
	-> hooked up downloads.
	-> Re-ordered a slew of things in the stats window.
	-> Connected up everything except # of bytes transfered and searches in the last hour
	
	2001/11/07
	-> Connected up searches in the last hour
	-> fixed a display bug in tab window.
	
	2001/11/08
	-> hooked up the download events for the d/l panel.
		This was unexpectadly difficult.
	
	2001/11/09
	-> fixed a bug in the tracker window that would cause events to pause for 30 seconds - causing Myster to look
		like it had crashed.
		
	2001/11/10
	-> finished up some work. (no time to work on Myster)
	
	2001/11/11
	-> added proper clietn side resume interface.
	-> fixed a few bugs in the Download Stats panel.
	-> re-worked load order. Added a hack that displayes the server stats window briefly off screen. getBounds() sucks.
	
	2001/11/12
	-> gave the tracker thread a timeout value.
	
	2001/11/13
	-> released DEV9.6
	
 Work on DEV 9.6:
	
	2001/11/14
	-> fixed the tracker timeout value from 120ms to 120 000ms. oops.
	
	2001/11/15
	-> Fixed DoS bug?
	
	2001/11/16
	-> probably not.
	
	2001/11/17
	-> Misc tweaks and bug fixes..
	-> The number of active pings allowed hass been increased to 50. I'm hoping that this will speed up
			the initialization of the tracker. The downside to this is it will crush unworthy computers
			(increases CPU load and processor spikes.. USE JAVA 1.3 on WINDOWS!)
	-> I have increased the number of active stats updates allowed. I can do this since I have fixed
			up the ClientHandshake object to use semaphores instead of a yeild-wait loop and
			sleep-wait loop that used to be there. As a result stats updates are no longer as
			CPU-expensive so the limiting them is less important.
	-> I have changed some of the printfs to give me a better clue as to what is happening in the
			IPLists. I am a bit paranoid that they are not working correctly.
	-> Changed the stats update time from 1 day to one hour. The day was walking around
			masquerading as an hour. The comments are full of lies!
	-> Changed the components in Client Window so they act more intellegently.
	-> 50 is too much try 20
	
  Work on DEV 9.7:
  
  	2001/11/19
  	-> Removed wizard.
  	-> Tweaked progress window a bit.
  	-> This is the version that will ship as PR 1
  	
  Work on DEV 9.7.1
  
  	2001/11/27
  	-> Myster now works again on the 5200/75. This is good news since that computer is the slowest computer
  			in exstance that will run Java. The only problem is Myster tends to take up 30 megs
  			of ram on its own. I'm fairly sure that this is occuring because of my in-efficient
  			MML implementation.
  	-> DEV 9.7.1 is working quite well. With the prefs-corruption bug finaly nuked I can finaly max
  			out my IPPool. I've realized that, while the system I currently have in place works ok,
  			a far better system could be devised based on more advanced garbage collection ideas.
  	-> NOTE: These two problems are not directly related. If I implement the new IPPool object it
  			will undoutably use MORE memory then the current system but be far less stupid in the way
  			it deletes IPs. If I implement the new preferens system I am hoping to save 5-10 megs of
  			memory at least. My goal is to slim Myster's core memory usage down to at least 20 megs so
  			I cna run in on the 5200/75.
  	-> Project MLA
  			MysterNetworks has started production of an applet version of Myster dubbed Myster Lite.
  			Thi version is ment to be used on intranets an embeed in web pages. Also on the table is
  			a new proxy system that will allow node-grouping (a way of mergine many nodes into one 
  			logical node to cut down on traffic (a sort of pseudo hierarchical system)) as well as
  			things like serving behind a fire wall, serving behind a proxy etc... I've very happy
  			with the design.
  	
  	2001/12/3-4
  	-> Re-wrote MysterIP object to spawn less threads.
  	-> Worked on MLA interface
  	
  	2001/12/5
  	-> Re-wrote MysterIPPool garbage collector.
  			It's now awsome. I love me. :-)
  			
  	2001/12/9
  	-> Fixed bug with tracker not loading on startup.
  	
  Work on DEV 9.8
  
  	2001/12/10
  	-> Made some changes in the client connection sections.
  	
  	2001/12/10 - 2001/12/?? working on MLA.
  	
  	???
  	-> Made the Multicolumn list resizable
  	
  	???
  	-> continuing to optimise new 9.8 core
  	-> fixed a silly bug to do with domain names and ips being treated as two different hosts.
  	-> made optimisations to the crawler thread.
  	
  	2002/01/09
  	-> I'm not sure but I think the memory leak I am experiencing on the mac has to do with
  			a garbage collection bug in the 1.1 VM. I'm adding back a stray System.gc() call in
  			the server end of the Server Stats section. This should be called just often
  			enough to stop mem leaks.
  			
  	2002/01/09
  	-> Allowed batch adding to MCList. MCList should now flicker less.
  	-> Changed bits of the program to use batch adding on the MCList.
  	
  	2002/01/10
  	-> Made the MCList use a kind of adaptive quicksort.
  	
  	2001/01/11
  	-> Optimised the hell out of the way the MCList uses the sorting algorythms	
  	
  	2002/01/14
  	-> made an event library, so now I can rapidly create event based systems. Hurray!
  	
  	2002/01/15
  	-> Fixed a long standing thread leak that would slowly thread bomb yo computa...
  	
  	2002/01/16 -> 2002/02/6
  	-> Added ID3v1 tag support.
  	-> Worked on new MML library!
  	-> Added "server names" so you can give a name to your server...
  	-> Fixed problems caused by old MML library
  	-> Fixed problems caused by old MML library
  	-> Fixed problems caused by old MML library
  	-> Fixed problems caused by old MML library
  	-> released a PR2 before it was ready
  	-> Fixed problems caused by old MML library
  	-> Fixed problems caused by old MML library
  	-> Worked for 3 days on new MML library so I don't have to deal with the confusing old one.
  	
  Work on DEV 9.9
  	
  	2002/02/08
  	-> worked on windows installer
  	
  	2002/02/09
  	-> working on file descriptor leak. Tracked it down to a lack MP3Header reader.. The in.close() was not als
  			always being called.
  	-> Added the ability to detect if there was another version of Myster Open.
  	
  	2002/02/10
	-> Added the ability to recover from interrupted/reconnected i-net connection (it takes 10 minutes to notice)
	
	2002/02/13
	-> Made it so .i is added when a file is first downloaded.
	
	2002/02/15
	-> worked on MML II system.
	
	2002/02/19
	-> finished MML II system.
	
	2002/02/20
	-> Made progresswindow show a little pie chart on currentprogress for an icon.
	
	2002/02/20-26
	-> Worked on cleaning up Myster Chat code.
	
	2002/02/25-28
	-> Bug fixes and misc cleanups inside Myster
	-> Fixed a deadlock on the tracker (looked like a meme leak on the mac)
	-> made the pie chart nicer.
	-> fixed an odd behavior in the downloader thread
	
  Work on DEV 10
    2002/02/01-07
    -> Synchronized Socket closes
    -> Added a max number of active server sections per whatever
    -> Added a dead IP cache queue so down IPs won't continuously be qweried
    -> Reduced the number of lookup threads to 15
    -> Nuked the none UDP pinger.
    -> Made the DNS lookup system dis-ablable by a boolen constant in the source
  
  Work on DEV 11
  	200/02/09
  	-> Changed server architecture to be way faster and less likely to crash. (worked around MacOS X PRTS leak)
  	-> fixed bugs in addIP function
  	-> Rebuit preferences manager to use MML II
  	-> removed all references to MML I
  	-> (MML II takes half the memory for the same structure)
  	-> Changed the preferences file format to use object serialization & MML II objects.
  	-> Changed the prefs to a hash
  	-> Created an new download queue structure
  	-> added the ability to queue downloads on the server
  	-> changed the server stats window to report when someone was in a queue.
  	-> Rebuilt the Preferences GUI.
  	-> Added a few Thread.sleep() to try and solve MacOS classic pausing - probably doesn't work completely
  	-> un synchronized socket closes (didn't do anything)
  	-> changed the file manager GUI to match the new Preferences GUI.
  	-> New search engine matches with "and" (aka &&) and only begining on words. Also recognizes quotes:
  		eg:
  			bob zerg foo "faz bar"
  			
  		will match:
  			"bobbet, food zerg faz barbie.mp3"
  	-> Made the File Manager file indexing filter out .i files.
  
  
  Work on DEV 12
  	2002/05/18
  	-> Progress window can now show your position in the download queue.
  	-> Preferences buttons have been tweaked.
  	-> Myster now has a plugin loader
  	-> Preferences now accept pluggins
  	-> connection sections can be added to the server via a plugin.
  		(Wrote a HTTP demo plugin)
  	-> plugins  in a plugins folder at the same level as Myster .jar
  	-> Added a "loading.." progress bar to assure Mac classic users that Myster isn't frozen.
  	-> Added a preference to increase the number of server threads (windows 9X users should NOT touch this setting!)
  	
  Work on DEV 13
  	2002/06/01
  	-> Re aranged the server package structure.
  	-> Fixed bug where the search crawler was asking for a conneciton section that didn't exist (!!)
  	-> re-enabled the non-udp pinger (people with NATs can now be clients again).
  	
  Work on DEV 13.1
  	2002/06/05
  	-> small bug in prefs fixed (what am I, on crack?) that caused Myster to forget all its prefs... 
  			- I deleted the wrong file!! DOH!
  	-> Fixed a big bug in the download queueing..
  	
  Work on DEV 13.2
  	2002/06/05
  	-> fixed a small bug in the work around that stopped the queue from occasionally jamming on some platforms.
  	-> auto checking if another Myster client is open was off.. Turned it back on.
  	-> Added a "kick free loaders" button that will tell the server to kick unreachable clients 
  			(people behind firewalls and other people who aren't running servers). It also sends them a message
  			explaining why they have been disconnected.
  			NOTE: it will not auto-kick people not sharing files.
  			or people who download a lot etc..
  	-> Added the server name (ip) to the search results listing
  	-> Added the ping to the tracker and ranking function
  	-> Re aranged the preferences in the package hierarchy
  	-> Fixed a bug to do with server stats and not having a file list in the serveer stats MML (doh)
  	-> Moved FileManager file to their new home in the .com hierarchy
  	-> Added a .extension filter so that Myster doesn't share in-appropriate types in any given
  			catagory
  	-> Added a button to set all types to one folder.
  	-> Misc tweaks to allow Myster to work with slightly bigger networks
  			- Find duplicates in addIP queue.
  			- Ping every 10 vs 5 minutes
  			- Crawl every 10 vs 5 minutes - !
  			- Shortend MAX possible UDP ping time to 20 secs from 60.
  	
  Work on DEV 14
	2002/06/25
	-> Added a few more files types
	-> Fixed a random drop on queued clients
	-> Dropped the number of addIP threads to 6 from 4.
	-> Fixed a bug where Myster classified clients not sharing files of any type as firewalled.
	
  Work on DEV 14.1-2
  	2002/07/10
  	-> Made the ping time more important in the ranking function
  	-> Changed the menu the preference option was in. It's now in Edit..
  	-> Changed the Myster menu to special to make the MacOS X cry babies happy.
  	-> Corrected a typo. Myster doesn't keep statics on its severing...
  	-> Added a number of files to the tracker.
  	-> Made it so -inf rank actually shows up as -inf and not a really big negative number.
  	-> Made it so the asking for a top ten will give you a top 50 (or so)
  	-> Clicking on the AddIP closebox will actually close the window.
  	-> Fixed it so Myster will never again NOT SEARCH for anything because all it's "up" servers haven't
  			been pinged yet
  	-> Made the initial search pool bigger (~ 50 from 15)
  	-> Made servers have a property that can tell the rest of the program if they have been pinged yet.
  	-> Fixed it so that there are only 15 and not 50 search threads initialy (it should have been like this already)
  	
  Work on DEV 14.3
    2002/07/27
    -> Fixed a problem where "top ten" was sending 10 ips instead of 50.
    -> Took all client conneciton sections and made them into a library.
    -> turned off the frigging tcp pinger again. I hate that thing.
    -> fixed bug in server search engine that would cause a worked pooled thread to
    		restart on queries with two spaces.
	-> Fixed a bug in the indexer that was allowing showing ".i" files in MPG3 and MooV
   	-> Reorganized most code.
   		All packages are now in the com hierarchy.
   		
   		Myster specific files are in com.myster
   		General library files are in com.general (violates java naming conventions but I don't care)
   		
   		From there file are named per module 
   		
   		IN MYSTER: (Files specific to Myster or using Myster specific classes)
   		
   		search
   		Client side search engine
   		
   		filemanager
   		Client side file management
   		
   		net
   		Misc Myster-wide network related
   		
   		util
   		Myster specific utility classes
   		
   		client
   		client network protocols, ui
   		
   		server
   		server, server events, ui (server stats window), server side protocols
   		
   		mml
   		Classes to manipulate mml structures.
   		
   		pluggin
   		Pluggin related classes.
   		
   		tracker
   		tracker and tracker ui
   		
   		pref
   		preferences and preferences ui
   		
   		menubar
   		menubar and menubar actions (events)
   		
   		IN GENERAL: (files in general SHOULD NOT access classes in com.myster!!!!!!!!)
   		
   		util
   		Misc utilitiy classes
   		
   		events
   		my events library
   		
   		mclist
   		my Multi Column List library
   		
   		tab
   		my crappy tab library
   		
   	File that are higher up in the hierarchy generaly should not be called be files that are
   	lower down. So com.myster.search file should not call com.myster.search.ui files. There
   	are several places where this is violated but they are to be considered bugs.
   	
  Work on DEV 15
    2002/09/24
    	-> Created basic ansynchrous UDP framework. (works over NAT)
    	-> Created PING ad PONG protocols.
    	-> Modified addIP to make use of asynchrous ping/pong.
    	-> Modified MysterIPPool to use a hashtable.
    	-> Made it so the search windows open with the text selected.
    	-> added a bucnh of keyboard shortcuts to menu items in myster
    	-> Made a MacOS X compatibility plugin (enables basic about box, preferences and quit functions)
    	-> Added a timer class (thanx Guillaume!)
    	-> Added some optimisations for MacOS 9.
    	-> Dropped the number of server threads by default down to 35 from 40
    	-> Increased the number of items in the tracker to 100 from 50.
    	-> Dropped the number of stats thread to 5 from 15.
    	-> Set the number of add IP threads to 3.
    	-> Removed the Server stats thread (replaced with timer event)
    	-> NOTE: Removed about 18 threads in total 
    			in this version of Myster for greater stability and responsiveness..
    	-> modified parts of the tracker to take advantage of new pinger
    	-> added a "ping" column to search results.
    	-> Added new WindowManager
    	-> re-wrote menubar code
    	-> Finished MacOS X plugin.
    	-> Myster is now 18 429 lines of yummy java goodness

  Work on DEV 16
    2002/10/26
    	-> Found work around for double clicking on an awt.List object fire two double click events
    	-> Eleminated one thread per download (progress windows now use Timer Class)
    	-> Tweaked thread distribution.
    	-> tweaked font usgae in MacOS X
    	-> Made ping sort properly in tracker
    	==== Released PR 5
    	-> More tweaking to the ping times/patterns and tracker
    	-> MCList fix a bug where the place you click on to move a column moved sideways each column
    	-> MCList now sorts japaneese (and other languages) text better. (hopefully)
    	-> Ponger is now O(1) and not O(n) (should be faster)
    	-> Made it so that 0 spots in the download queue is not allowed.
    	-> Hopefully fixed a Japaneese punctuation hiccup.
    	
   Work on DEV 16.2
     2002/12/19
     	-> Removed an extra thread for server stats.. Replaced with a timer..
     	-> Made some minor changes/bug fixes for chat.
     	-> Made a bandwidth throttling system that worked
     	-> made bandwidth throttling system work with prefs
     	-> made bandwidth prefs pane UI
     	-> baby_p added more .extensions to the file list filter
     	-> added a ROMS type.
     	-> Working on a Chat plugin (not finished) (still!!!)
     	-> Working on a UDP Transaction system (Finished but not implemented in the rest
     			of the app)
     	-> Added proper window behavior
     			(Window positions are now remebered)
     	-> Fixed loss of recent prefs when quitting bug
     	-> Myster is now ~20 000 lines of code
     	-> Fixed a bug in my new MML parser implementation (<></> error).
     			It was dicovered when I was working on the chat plugin.
     	-> Started work on changing the chat plugin architecture into something less crap.
     	
    Work on DEV 17
      2003/02/22
     	-> Made it so that clicking an entry in the download stats (server stats) makes a connect window pop up
     	-> Made it so that if a p2p window is created with an ip, the window automatically connects.
     	-> Wrote up an instant messaging system fixing bugs with the Myster UDP transaction libraries as I go.
     	-> Found out that MenuBarManager is not thread safe or very safe at all for that matter. 
     			I will have to fix that later..
     	-> Worked some more on cleaning up Chat's code... Code should be much smaller when I am finished
     			with it. This might take a while. Wondering if I should release chat as is and fix it later. :-)
     	-> Finished instant messaging. Is good enough for a release.
     	-> Added a button to the Server Stats so people who are downloading from you can be messaged.

    Work on DEV 18
      2003/03/23
      	-> Fixed some minor bugs in the Instant Messaging GUI.
      	-> MacOS X tweaking...
      	-> Fixed a window manager bug to do with resize/move events being sent when the window is not visible... (MacOS X)
      	-> Fixed a plugin loader bug
      	-> Ported Space Smillies to Myster 'cause I felt like it.
      	-> Move the instant message menu item to its permanent location
      	-> Added an instant message button to the p2p window.

	Work on DEV 18.1
	  2003/04/10
	  	-> Tried to fix dual processor crashing bug.. failed...
	  	-> Created a ProgressBar object
	  	-> Re-wrote ProgressWindow completely.
	  			Progress window code is now readable and will scale well to multi source downloads.
	  			Each bar is repainted independently.
	  			Texts are now text labels and not just painted on text so they should be faster too.
	  			Both bars can have that cool pulsating effect now
	  			Only bars that are changing get repainted so there is no more performance penalty for
	  				simply having a progress window open.
	  			None progress related code has been taken out and put into its own class.
	  			ProgressWindow should be moving the com.general.util at some point soon.
	  			
	Work on DEV 18.2 (PR 6)
	  2003/04/20
	  	-> Fixed a very old bug to do with servers that are found down ONCE are never checked again to see
	  			if they came back up. VERY old bug. (thanx to Warcraft III)
	  	-> Added a MysterType class to repesent the 4 byte Myster file type internally
	  	-> Re-did the File Description List code completely (a pre-requisit to multi source download)
	  	-> Added an I18n class to support multiple languages in Myster.
	  	-> Added md5, sha1 has code
	  	-> Added hash code to File Stats protocol
	  	-> Added framework for opening a web browser with a URL (for clickable banners)
	  	-> Added an uptime column in the tracker and to the protocol and to about 100 other places needed to add that
	  			column to the tracker and implemented it and a routine to format the number blah blah blah.
	  	-> Fixed a typo in the word cancel of the "ask" dialog word.
	  	-> Added the ability to associate a URL with a banner image.
	  	-> Added ability to over-ride the way web browsers are launched via a plugin
	  	-> Created a PC plugin to over-ride web browser launching on the pc
	  	-> Added ability to over ride web browsing to the MacOS X plugin.
	  	-> Did the client side code to make this work. Clickable banners now work on PC and MacOS X.
	  2003/05/20
	  	-> Fixed the HashCache so that it uses a save system similar to the prefs.
	  	-> Made it so Transaction library retries a few times if it doesn't recieve a reply initially...
	  	-> Added an event system to the hash manage to deal with enable / disable
	  	-> Added a GUI to turn of File Hashing. Plz don't turn it off!
	  	-> Made a work around for the double click bug with awt.list in MRJ 1.3.X for banners..
	  	-> Enhanced the HashManager Event system. Trying to make hashManager module have a proper
	  			front end/back end split.
	  	-> Finished up the HashManagerGUI
	  	-> Added ability to turn off and on Myster types. Porn is off by default ...
	  	-> Made behavior consistant with itself
	  2003/06/20
	  	-> Worked on getFileByHash
	  	-> took rest of the month off.
	  2003/07/20
	  	-> created multi-source server section
	  	-> hoooked it up to server GUI
	  	-> created Multi source client project am testing it with server.
	  	-> fixed a slew of bugs and oddities
	  	-> enhanced the file server event model.
	  	-> Myster is no 25 000 lines of code.
	  	-> Merged multi-source download client project with main Myster source
	  	-> hooked up 6669 error message to FAQ on the myster web page.
	  	-> Replace Operator reseter thread with a timer.
	  	-> MSTestfile.mp3 has a md5 hash of 631b2c76267e568ccb221193ab23e134=======
	  	-> Replace Operator reseter thread with a timer.
	  2003/08/20 <- DEV 19
	  	-> Fixed bug in getStringFromBytes that would show terabytes as gigabytes. (Thanx Rev)
	  	-> Multi Source download Bug fixes
	  			Multisource download only used to work with MooV.. Now works with all types.
	  			Now closes the file properly.
	  			Now warns if file already exists
	  			Now displays bytes/sec.
	  			Hash manager should now work with MacOS 9.
	  			Downloaded files now rename themselve to what they are supposed ot be.
	  	-> fixed the length bytes problem in P2P window. (size showed up as "1827681" instead of XXXMB or XXXKB)
	  			(Thanx to a user on the net)
	  2003/08/30 <- DEV 19.1
	  	-> Made it so the progress window resizes after a new host is found.
	  	-> Fixed a stupid bug in the rename of somefile.mpg.i to somefile.mpg
	  	-> Hooked up banners and URLs in multi source download window.
	  	-> Made it so the crawler does more than one pass.
	  	-> Moved hash manager to proper menu
	  	-> Hooked up hash cache pref panel
	  	-> Decided to remove the whole panel anyway.
	  	-> Made it so the p2p window can also launch a multi source download
		-> Fixed it so that when d/l is complete the bars say something sensible.
		-> k/s counter keeps going down, now fixed
		-> change "Last Ping Time" to "Ping" in the tracker
		-> For types in the type preferences true/false to on/off
		-> Put a proper title on the progress window for MS download
		-> Created a MacOS 9 plugin so that browsers will auto-launch on banner clicks & menubar won't disapear
		-> Changed the queue Int to an MML structure with queue postition and message tags in MS protocol
				This new DEV will not work with previous DEVs.
	2003/09/11 <- DEV 19.2
		-> Fixed a typo.
		-> Moved multi-source download to its new home on conneciton section 90.
		-> Changed the 6669 firewall image
	
	Work on PR 7
	
	2003/09/18 <- DEV 19.3
		-> Completely re-wrote download queue manager. It now doesn't use any thread (it used to use 4)
				it's much easyer to debug (7 hours to write instead of 20 hours). Also
				DOES NOT REQUIRE MYSTER TO BE RESTARTED! Hurray!
		-> Work around freeze on cancel.
	
	< Absence brough about by some sort of depression >
	
	Wrote a tutorial on Myster's Transaction framework
	Wrote the top ten connection section as a UDP section
	Wrote a UDP connection section event libray so that all calls to the UDP standard suite can be event driven
	
	< At some random point got over the depression and started coding again >
	
	2003/11/12 <- DEV 19.4
		-> Fixed a bug where disconnecting one multi-source download disconnects all multi-source downloads forever
		-> Fixed a bug where queueing didn't work correctly for multi-source downloads
		-> Re-organized most of the code inside multi-source download server side.
		-> fixed a bug where queued downloads were not showing up as being queued n the server stats.
		-> Fixed a bug where the connection was being tested for leeching every single goddam time.
		-> re-wrote most of the client side Multi Source Download code.
			- Will now consistantly rename files from "blag.i" to "blag".
			- Shows more sensible text messages
			- Re-uses spots left open by abandonned download segments in the
				progress window
			- Doesn't connect to a queued download server if there's already and active download in progress.
		-> Re-wrote some of the hash / crawler code
			- crawler now batches it's connections when it can
		-> Banners will now change every 30 seconds and not whenever a new banner comes in.
		-> Continued writting UDP connection section code.=======

	//?
	Re-qrote most of the multi source download client code. It now is much nocer to work with
	- Myste ris now 27 000 line of yummy java goodness
	
	Work on DEV 19.5
      2004/01/06
		-> Fixed a bug where the hash search crawler only used ips from the array of 
			last resort and not the tracker
		-> Fixed a bug where Myster would ask the user if they wanted to over-write TWICE!
		-> Fixed a bug where two crawler threads could be running at the same time
		-> hooked up events in the crawler code to what they should be. 
			I've noticed the design of my crawler is somewhat crap. I intend to fix this.
	- PR 7 released
		-> Fixed a bug where the search list was cleared TWICE.
		-> Refactored Opperator event model.
			Removed another thread!!
		-> Added number of search - by - hash statistic to server stats window.
		-> Added number of concurrent connections to server stats
		-> Added number of pings to server stats.
		-> added number of connections to server stats.
		-> Added uptime to server stats
		-> Fixed bug where files downloaded to an unexpected location would not rename properly
		-> Made it so that server stats actually report how far through the FILE they are as opposed to simply
				how far through the current block.
		-> Fixed bug where the wrong amount would be added to bytes transfered if the download had an 
				initial offset.
		-> Added ".m4a" to .mp3
		-> Made so that multi-source downloads are resumed if the program crashes or is quit with downloads open.
		-> Fixed a bug where a download that was downloaded to a directory shown by the users would
				aquire a double ".i".

	
	Work on Dev 19.6
		-> Guillaume added code to move the preference file location around on Linux & added an architechture to
				find the current working folder consistantly.
		-> Added the RING type.
		-> Guillaume added some code to check INSIDE OF ZIP FILES for files that match the right types..
				so if you have an ".nes" file but it's inside a .zip file, Myster will now OPEN
				THE ZIP FILE and find it and make it downloadable! Isn't that great!
		-> I re-did the TypeDescription list to add file types. ".extensions" can now be configured via the
				typdescriptlist.mml
		-> Added an "is Archivable" flag to say if the type can be in an archive.
		
	Work on DEV 19.7 (PR 7.6)
		-> Merged Guillame's new MCList sort algorythm.
		-> Added ability to set types as on/off by default in typedescriptionlist.mml
		-> Corrected oddities found by FindBugs.
		-> Changed the tabs in the server stats so they actually look like tabs (thanx rev)
		-> Made " - Myster" appear after every window name in Linux (Exception Progress windows)
		-> Made it so that 1 person cannot hog all the download spots.
		-> Fixed a freeze that happened sometimes when opening a new download.
		-> Fixed a problem where the disconnect button wouldn't disconnect a user who
				was downloading from you.
		-> The file info getting now doesn't jam as much.
		-> The file info getting is no longer a seperate thread. Putting it in a seperate thread
				was causing it to crash in some circumstances. Making the info getting part
				of the duties of the main search thread should increase the responsiveness
				of Myster while searching and increase the chances of file meta data
				being successfully downloaded. (This change might also make
				cancelling searches faster)
		-> The search engine now uses 20 searcher threads insteead of 15
				This should improve search performance by > 25%.
		-> Fixed a bug where the PORN type would list no files.
	
	Work on DEV 20
		2004/03/20
		-> Made the awt.List objects in the p2p windows in MCLists.
		-> Fixed up the Search window bar a bit.
		-> Made it so the search button no longer changes when button gets set to start/stop.
		-> Switched over the tracker choice box to a TypeChoice object (finally)
		-> Added all the UDP client and server sections
		-> Moved ove the top ten conneciton section to UDP / TCP.
		-> Moved over the get type list to UDP / TCP.
		
	Work on DEV 21
		2004/04/12
		-> Fixed a bug where the length of the UDP packet was not reset after each packet.
		-> Fixed a bug where MSSOurce download is started automatically but if you can't
				find the file you have to delete your preferences to get it to forget about the file.
		-> Made the startup progress window look pretty.
		-> Made the file download progress windows show sensible messages when they are negotiating
				a new transfer...
		-> Added another work around to try and stop the progress windows from freezing Myster.
		-> Added some code to deal with a bug in MacOS X and 1.3.1.. If the user drags a progress window
				while the progress window tried to resize, the resizing won't work. Myster now tries to
				resize the window 20 times (once every half second) before giving up.
		-> Mster is now 28414 lines of code.
		
	==>> PR 8
		 
	Work on DEV 21.1
		2004/08/21  4 months with not much happening. wow.
		-> Got Myster running and compiling under eclipse. Nice.
		-> Fixed lots of minor bugs and reformated all the code to comply with java coding standard.
		-> Added a bunch of comments. Myster is now 31000+ lines of code.
		-> Converted the search endgine to search UDP first. 
			- TopTen and SearchRequest are now done in parallel with one packet each.
			- No limit to number of UDP connections, so Myster can now search everyone on the network
					at the same time.
			- For backwards compatability there is a thread pool to do TCP connections if the UDP
					request is not understood.
		-> Fixed a bug where certain japaneese files without "merged punctuation" don't
				resume. (Thanx "DIALTONE")
		-> Fixed a bug where no feedback was given after downloading a file because the server was down.
				A progress dialog now is shown befre connecting to the first server.
				
	Work on DEV 21.2
		2004/09/14	all this time just to find time to START work wow..
		-> Fixed the box border-not-appearing-on-macOS 9 bug.
		-> Hopefully fixed the pulsating progress not always shown bug.
		-> Fixed a bug where clicking cancel on a dialog for multisource download would cause regular download to start.
		-> Fixed a bug where Myster just plain froze.
		-> Added two routines that allow for code to be execute on the event thread. is 1.1 compatible! yeah!
		-> Made as much of Myster as possible run on the event thread.
		-> Made the "windows" menu special, in that it is built for every subscribed window each time one of the windows is
				shown/hidden or changes name. This should make Myster faster at opening windows and reduce menu blinking.
	  	-> Made it so that search and p2p windows are renamed to something more appropriate on the fly.
	  	-> Wrote a socket pool system so that all stream (TCP based) connection sections can be executed 
	  	        asychronously from a pool.
	  	-> Wrote an asychronous function call framework
	  	-> re-wrote the Myster search sub system to use said socket pool (now only creates one thread!).
	  	-> Re-wrote standard datagram callbacks to conform to an asynchronous function call (eclipse rocks
	  	        for refactoring!)
	  	-> Added code documentation
		-> Made it so menu bars appear on progress windows.
		-> Made it so all windows have a nice looking Myster icon.
		-> Made multi source download automatically adapt to faster servers.
		-> Windows will now un-minimize automatically if you ctrl-1 to them.
		-> Fixed some issues with Multisource FileProgressWindows giving wrong information.
		-> Made FileProgressWindows use far less CPU power.
		-> Made it so you can navigate MCLists using the keyboard up/down arrows, page up/down and enter to doubleClick
		-> Fixed a big memory leak when the memory used by windows wasen't being freed.
		-> For some reasone none-multisource downloads were turned off.. I guess that explains a few things I've been
				seeing on the network.
		-> Made the MCList look a bit different: column rows appears to be longer...
		-> Made starting searching faster by not starting any threads when starting a search.
		-> Made Myster startup faster.

	Work on DEV 21.3
		2005/01/01
		-> Made a TimerThread class to make doing periodic tasks easyer.
		-> Used the TimerThread to get rid of a thread used when the tracker window was open.
		-> Optimized Multi-Column-List resizing code.
		-> Made it so that the Tracker window is updated more frequently.
		-> Wrote code so that MCList now uses a JTable implementation. Woohoo.
		-> Made some things that I thought use the event thread actually use the event thread.
		-> Fixed a bunch of comparability issues with MACSOS 1.4.X..
		-> Made it so that ID3 tag information is cached (less odd pausing and disk activity).
		-> Made it so the File manager (in the preferences) now indexes files in the background (no more freezing the 
				GUI when clicking apply!!).
	  	-> Fixed up the DEFAULT_PORT variable so changing that actually changes the port without causing Myster to
	  			behave badly (maybe a user preference soon?).
	  	-> The hash manager now takes up less process time thanx to limiting the number of events it sends.
	  	-> Multisource downloads now automatically adjust their download window depending on the speed of the server. (FASTER DOWNLOADS!)
	  	-> Did a whole lot of work on the search engine (MUCH faster searching!)
	  	-> Fixed a bunch of looonnngg standing bugs in the p2p window.
	  	-> Made it so that UDP transactions (connection sections) show up in the server stats.
	  	-> Gave a message that queue is full on MSDownload queue is full. (but Myster doesn't show it :( )
	  	-> Made it so that the server disconnects bad downloads faster.
	  	-> Fixed it so that bit rate and sampling rate are ALWAYS found for .mp3 files.
	  	-> Made it so that downloaders that were kicked 'cause they were leechers don't show up on the server stats.
	  			In fact all "done" downloads that never sent data won;t show up.
	    -> Tweaked the startup time a little (but removed error dialogs and things.. naughty me)...
	  	-> Removed dependencies of other classes on Myster.java.. Created MysterGlobals and "application" singleton classes.
	  	-> Fixed none 1.1 compatible places to use reflection (hopefully this will actually work!).
	  	-> Made Multi-source download code more robust. Myster will now look in the current download directory as well as the 
	  			original path the user downloaded the file to. (It still doesn't remember the path when the user
	  			manually tells myster where the file is... To do so would require re-writting the .p file.)
	  	-> Fixed a bug where multi-source download wouldn't start a download because of un-merged punctuation
	  	-> Rewrote the multi-source download error code - so that more errors are reported properly and better
	  			appropriate corrective action is taken.
	  			
2023-12-01

Refactored standard protocol suite code
to better use new concurrency library.
Added new concurrency library code to 
take advantage of everything I've learned over the years
Fix AnswerDialog to work correctly - resize broke
fix ProgressDialog to adapt to new Java
Fixed Ant build.xml to work
Fixed manifest
Tweaked the relationships between objects and started removing singletons in anticipation of new unit testing code

		
(Red List)
to do:

Need to convert to Maven
Need to update all libraries
Need to try out building using the modern JDK 20 tools
Need to implement

